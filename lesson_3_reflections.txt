When would you want to use a remote repository rather than keeping all your work
local?

    Using a remote repository instead of than keeping all your work local is useful 
    when you want to share your repository with one or more people. This is
    especially necessary when coding projects become collaborative with one or
    multiple other people contributing to the project. Rather than send each other
    emails of the entire repo once in a while, and having one person merge all
    the new commits to their own branch, Github allows all collaborators to 
    directly push new commits onto the public branch.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If Git automatically stayed up-to-date with your remote repository, 
    you would lose all the work on your local directory that you have not 
    yet pushed to the remote repository. In other words, the automatic pulls
    would keep reverting your local directory back to the most recent commit
    you made on Github, or even updating your directory with another person's
    commit! Either way, you would lose your work-in-progress.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Recall that clones are copies of repositories made from someone else's Github account directly onto your local directory.
    
    Forks are just a type of clone that Github makes for you on their machines. 
    When you press the fork button on someone else's repository, Github copies 
    their repository into your Github account. This saves you the steps of first
    cloning their copy onto your local directory and then pushing it into your 
    remote directory on Github. The number of forks other people make on one 
    person's repository is also tracked. Forking allows the creator of the
    original repository to get credit when other people use their code as a base
    for their own modifications.

    While forks and clones are the results of copying an entire repository, 
    branches only refer to a part of the repository unless the entire repository
    only has one branch (i.e. the master branch). Still, you wouldn't say that
    you've made a branch of someone else's repository. You would use the word 
    clone instead (or fork if you're working with other people on that copy on
    Github). Recall that branches are a series of commits that branch off of a previous commit for various purposes like experimenting with some changes, 
    developing a new feature, or for fixing bugs without having to worry about
    accidentally breaking something else during the process.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here